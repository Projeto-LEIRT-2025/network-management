[versions]
commons-net = "3.11.1"
snmp4j = "3.9.0"
shadow = "8.1.1"
snakeyaml = "2.4"
kotlin = "2.1.10"
spring-boot = "3.4.3"
dependency-management = "1.1.7"
serialization = "1.8.0"
postgresql = "42.7.5"
coroutines = "1.9.0"
jjwt = "0.12.6"
springdoc = "2.8.9"

[libraries]
commons-net = { module = "commons-net:commons-net", version.ref = "commons-net" }
snmp4j = { module = "org.snmp4j:snmp4j", version.ref = "snmp4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
springdoc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
spring-boot = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf" }
spring-boot-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
spring-boot-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
reflection = { module = "org.jetbrains.kotlin:kotlin-reflect" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

[plugins]
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }